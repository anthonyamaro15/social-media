[{"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/index.tsx":"1","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/redux/reducer/initialValues.tsx":"2","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/CreatePost.tsx":"3","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/SingleCardComponent.tsx":"4","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/MainApp.tsx":"5","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/DisplayCards.tsx":"6","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/reportWebVitals.ts":"7","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/Navbar.tsx":"8","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/Login.tsx":"9","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/Register.tsx":"10","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/redux/reducer/postReducer.tsx":"11","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/redux/actions/actions.ts":"12"},{"size":890,"mtime":1606418201060,"results":"13","hashOfConfig":"14"},{"size":61,"mtime":1606417769113,"results":"15","hashOfConfig":"14"},{"size":911,"mtime":1606784365110,"results":"16","hashOfConfig":"14"},{"size":1227,"mtime":1606784027861,"results":"17","hashOfConfig":"14"},{"size":1055,"mtime":1606775218626,"results":"18","hashOfConfig":"14"},{"size":918,"mtime":1606774993200,"results":"19","hashOfConfig":"14"},{"size":425,"mtime":1606413619291,"results":"20","hashOfConfig":"14"},{"size":245,"mtime":1606767080458,"results":"21","hashOfConfig":"14"},{"size":1216,"mtime":1606769815762,"results":"22","hashOfConfig":"14"},{"size":1235,"mtime":1606770041553,"results":"23","hashOfConfig":"14"},{"size":495,"mtime":1606771141806,"results":"24","hashOfConfig":"14"},{"size":85,"mtime":1606771081532,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5hrh93",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/index.tsx",[],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/redux/reducer/initialValues.tsx",[],["52","53"],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/CreatePost.tsx",[],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/SingleCardComponent.tsx",["54","55"],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/MainApp.tsx",["56","57"],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/DisplayCards.tsx",[],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/reportWebVitals.ts",[],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/Navbar.tsx",[],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/Login.tsx",["58"],"import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\n\ninterface FormProps {\n   value: string;\n}\n\nconst Login = () => {\n   const {register, handleSubmit} = useForm();\n   const history = useHistory();\n\n   const onSubmit = async (value: FormProps) => {\n      const {data} = await axios.post(`${process.env.REACT_APP_API_SERVER_URL}/api/login`, value);\n      // data.token\n      history.push(\"/\");\n   }\n   return (\n      <div>\n         <form onSubmit={handleSubmit(onSubmit)}>\n            <label htmlFor=\"email\">\n               <input \n                  type=\"text\" \n                  name=\"email\" \n                  id=\"email\" \n                  placeholder=\"email\" \n                  ref={register}\n               />\n            </label>\n            <label htmlFor=\"password\">\n               <input \n                  type=\"password\" \n                  name=\"password\" \n                  id=\"password\" \n                  placeholder=\"password\" \n                  ref={register} \n               />\n            </label>\n            <button type=\"submit\">Submit</button>\n         </form>\n      </div>\n   )\n}\n\nexport default Login;\n","/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/components/Register.tsx",[],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/redux/reducer/postReducer.tsx",[],"/Users/anthonyamaro/Desktop/myFiles/typescript/tp-projects/social-media/src/redux/actions/actions.ts",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":18},{"ruleId":"63","severity":1,"message":"67","line":30,"column":11,"nodeType":"65","messageId":"66","endLine":30,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":1,"column":16,"nodeType":"65","messageId":"66","endLine":1,"endColumn":24},{"ruleId":"68","severity":1,"message":"69","line":18,"column":6,"nodeType":"70","endLine":18,"endColumn":8,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"72","line":16,"column":14,"nodeType":"65","messageId":"66","endLine":16,"endColumn":18},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'like_post' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostData'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [getPostData]",{"range":"78","text":"79"},[503,505],"[getPostData]"]